// Generated by dts-bundle-generator v5.7.0

/**
 * Assert that a value equals the previous snapshot.
 *
 * If the value didn't equal the previous snapshot, this throws an error.
 *
 * In any of the following cases, this updates the snapshot rather than throwing
 * errors.
 * - No previous snapshots exist.
 * - `"--update"` exist in `process.argv`.
 * - `process.env.MOCHA_ASSERT_SNAPSHOT` is `"update"`.
 *
 * @param value The value to compare with snapshot.
 * @throws {@link Error} Thrown if the value didn't equal the previous snapshot.
 */
export declare function assertSnapshot(value: unknown): void;
/**
 * Assert that a function throws an error that equals the previous snapshot.
 *
 * If the thrown error didn't equal the previous snapshot, this throws an error.
 *
 * In any of the following cases, this updates the snapshot rather than throwing
 * errors.
 * - No previous snapshots exist.
 * - `"--update"` exist in `process.argv`.
 * - `process.env.MOCHA_ASSERT_SNAPSHOT` is `"update"`.
 *
 * @param func The function that throws an error to compare with snapshot.
 * @throws {@link Error} Thrown if the function didn't throw any errors or the
 * thrown error didn't equal the previous snapshot.
 */
export declare function assertSnapshotThrows<T>(func: () => T): T extends PromiseLike<any> ? Promise<void> : void;
/**
 * Define the hooks to read/write snapshots.
 *
 * This is used in `--require mocha-assert-snapshot` as a root hook plugin.
 *
 * Don't use this object directly.
 * This package may change this object in a patch version.
 *
 * @internal
 * @see https://mochajs.org/#root-hook-plugins
 */
export declare const mochaHooks: {
	beforeEach(this: any): Promise<void>;
	afterEach(this: any): void;
	afterAll(): Promise<void>;
};

export {};
